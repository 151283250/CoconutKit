This project is a collection of tools and reusable components used at Hortis le Studio. It is meant to be used
as a standalone static library.

Most components can be used either on the iPhone or on iPad.

1) Building the library
   --------------------
To compile and use the library in the way it is intended to be used, download the make-fmwk and link-fmwk.sh commands 
available at:
    https://github.com/defagos/make-fmwk
    
To build the library, run the make-fmwk command from the nut project main directory (the one containing nut.xcodeproj), 
as follows:
    make-fmwk.sh Release                        for the release binaries
    make-fmwk.sh Debug                          for the debug binaries
    make-fmwk.sh -s Debug                       for the debug binaries (with source code for debugging)
These three commands create three .staticframework files in the ~/StaticFrameworks directory.

The debug library contains additional checks and assertions and should be used during development. These checks are
stripped off from the release library which should therefore be used for production code. 

2) Using the library
   -----------------
To use the library in a project, add a frameworks.txt file in its main directory, containing either
    nut-Release
    nut-Debug
    nut-Debug-src
depending on the .staticframework you intend to use.
Then run the link-fmwk.sh command (no parameter is needed) from the project main directory:
    link-fmwk.sh
This generates a symbolic link to the corresponding .staticframework package in ~/StaticFrameworks. This symbolic
link, which you will find in the StaticFrameworks subdirectory of your project (generated by link-fmwk), must then
be added to your project. Build and run, you are done.

3) Building the nut-demo project
   -----------------------------
An iPad demo project is provided. To compile it, first build the nut-Release .staticframework (as described above), then 
run the link-fmwk command from the nut-demo project main directory (the one containing nut-demo.xcodeproj). The
project can then be built and run using Xcode.
